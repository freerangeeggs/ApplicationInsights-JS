// THIS FILE WAS AUTOGENERATED
/// <reference path="../../External/qunit.d.ts" />
/// <reference path="../../../JavaScriptSDK.Interfaces/Contracts/Generated/ContextTagKeys.ts" />
QUnit.test("Test property ContextTagKeys.ApplicationVersion was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.applicationVersion !== null, "ContextTagKeys.applicationVersion == null");
    QUnit.ok(temp.applicationVersion === "ai.application.ver", "Issue with ContextTagKeys.applicationVersion");
});

QUnit.test("Test property ContextTagKeys.DeviceId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceId !== null, "ContextTagKeys.deviceId == null");
    QUnit.ok(temp.deviceId === "ai.device.id", "Issue with ContextTagKeys.deviceId");
});

QUnit.test("Test property ContextTagKeys.DeviceLocale was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceLocale !== null, "ContextTagKeys.deviceLocale == null");
    QUnit.ok(temp.deviceLocale === "ai.device.locale", "Issue with ContextTagKeys.deviceLocale");
});

QUnit.test("Test property ContextTagKeys.DeviceModel was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceModel !== null, "ContextTagKeys.deviceModel == null");
    QUnit.ok(temp.deviceModel === "ai.device.model", "Issue with ContextTagKeys.deviceModel");
});

QUnit.test("Test property ContextTagKeys.DeviceOEMName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceOEMName !== null, "ContextTagKeys.deviceOEMName == null");
    QUnit.ok(temp.deviceOEMName === "ai.device.oemName", "Issue with ContextTagKeys.deviceOEMName");
});

QUnit.test("Test property ContextTagKeys.DeviceOSVersion was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceOSVersion !== null, "ContextTagKeys.deviceOSVersion == null");
    QUnit.ok(temp.deviceOSVersion === "ai.device.osVersion", "Issue with ContextTagKeys.deviceOSVersion");
});

QUnit.test("Test property ContextTagKeys.DeviceType was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceType !== null, "ContextTagKeys.deviceType == null");
    QUnit.ok(temp.deviceType === "ai.device.type", "Issue with ContextTagKeys.deviceType");
});

QUnit.test("Test property ContextTagKeys.LocationIp was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.locationIp !== null, "ContextTagKeys.locationIp == null");
    QUnit.ok(temp.locationIp === "ai.location.ip", "Issue with ContextTagKeys.locationIp");
});

QUnit.test("Test property ContextTagKeys.LocationCountry was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.locationCountry !== null, "ContextTagKeys.locationCountry == null");
    QUnit.ok(temp.locationCountry === "ai.location.country", "Issue with ContextTagKeys.locationCountry");
});

QUnit.test("Test property ContextTagKeys.LocationProvince was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.locationProvince !== null, "ContextTagKeys.locationProvince == null");
    QUnit.ok(temp.locationProvince === "ai.location.province", "Issue with ContextTagKeys.locationProvince");
});

QUnit.test("Test property ContextTagKeys.LocationCity was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.locationCity !== null, "ContextTagKeys.locationCity == null");
    QUnit.ok(temp.locationCity === "ai.location.city", "Issue with ContextTagKeys.locationCity");
});

QUnit.test("Test property ContextTagKeys.OperationId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationId !== null, "ContextTagKeys.operationId == null");
    QUnit.ok(temp.operationId === "ai.operation.id", "Issue with ContextTagKeys.operationId");
});

QUnit.test("Test property ContextTagKeys.OperationName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationName !== null, "ContextTagKeys.operationName == null");
    QUnit.ok(temp.operationName === "ai.operation.name", "Issue with ContextTagKeys.operationName");
});

QUnit.test("Test property ContextTagKeys.OperationParentId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationParentId !== null, "ContextTagKeys.operationParentId == null");
    QUnit.ok(temp.operationParentId === "ai.operation.parentId", "Issue with ContextTagKeys.operationParentId");
});

QUnit.test("Test property ContextTagKeys.OperationSyntheticSource was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationSyntheticSource !== null, "ContextTagKeys.operationSyntheticSource == null");
    QUnit.ok(temp.operationSyntheticSource === "ai.operation.syntheticSource", "Issue with ContextTagKeys.operationSyntheticSource");
});

QUnit.test("Test property ContextTagKeys.OperationCorrelationVector was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationCorrelationVector !== null, "ContextTagKeys.operationCorrelationVector == null");
    QUnit.ok(temp.operationCorrelationVector === "ai.operation.correlationVector", "Issue with ContextTagKeys.operationCorrelationVector");
});

QUnit.test("Test property ContextTagKeys.SessionId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.sessionId !== null, "ContextTagKeys.sessionId == null");
    QUnit.ok(temp.sessionId === "ai.session.id", "Issue with ContextTagKeys.sessionId");
});

QUnit.test("Test property ContextTagKeys.SessionIsFirst was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.sessionIsFirst !== null, "ContextTagKeys.sessionIsFirst == null");
    QUnit.ok(temp.sessionIsFirst === "ai.session.isFirst", "Issue with ContextTagKeys.sessionIsFirst");
});

QUnit.test("Test property ContextTagKeys.UserAccountId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userAccountId !== null, "ContextTagKeys.userAccountId == null");
    QUnit.ok(temp.userAccountId === "ai.user.accountId", "Issue with ContextTagKeys.userAccountId");
});

QUnit.test("Test property ContextTagKeys.UserId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userId !== null, "ContextTagKeys.userId == null");
    QUnit.ok(temp.userId === "ai.user.id", "Issue with ContextTagKeys.userId");
});

QUnit.test("Test property ContextTagKeys.UserAuthUserId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userAuthUserId !== null, "ContextTagKeys.userAuthUserId == null");
    QUnit.ok(temp.userAuthUserId === "ai.user.authUserId", "Issue with ContextTagKeys.userAuthUserId");
});

QUnit.test("Test property ContextTagKeys.CloudRole was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.cloudRole !== null, "ContextTagKeys.cloudRole == null");
    QUnit.ok(temp.cloudRole === "ai.cloud.role", "Issue with ContextTagKeys.cloudRole");
});

QUnit.test("Test property ContextTagKeys.CloudRoleInstance was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.cloudRoleInstance !== null, "ContextTagKeys.cloudRoleInstance == null");
    QUnit.ok(temp.cloudRoleInstance === "ai.cloud.roleInstance", "Issue with ContextTagKeys.cloudRoleInstance");
});

QUnit.test("Test property ContextTagKeys.InternalSdkVersion was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalSdkVersion !== null, "ContextTagKeys.internalSdkVersion == null");
    QUnit.ok(temp.internalSdkVersion === "ai.internal.sdkVersion", "Issue with ContextTagKeys.internalSdkVersion");
});

QUnit.test("Test property ContextTagKeys.InternalAgentVersion was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalAgentVersion !== null, "ContextTagKeys.internalAgentVersion == null");
    QUnit.ok(temp.internalAgentVersion === "ai.internal.agentVersion", "Issue with ContextTagKeys.internalAgentVersion");
});

QUnit.test("Test property ContextTagKeys.InternalNodeName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalNodeName !== null, "ContextTagKeys.internalNodeName == null");
    QUnit.ok(temp.internalNodeName === "ai.internal.nodeName", "Issue with ContextTagKeys.internalNodeName");
});

